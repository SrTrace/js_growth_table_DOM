{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCIA,IAAM,EAAQ,SAAS,aAAa,CAAC,UAC/B,EAAO,SAAS,gBAAgB,CAAC,WACjC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,kBACnC,EAAY,SAAS,aAAa,CAAC,kBAIrC,EAAW,EAAM,IAAI,CAAC,MAAM,CAC5B,EAAW,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAMzC,SAAS,EAAe,CAAC,EACvB,IA2BM,EA3BA,EAAY,EAAE,MAAM,CAAC,SAAS,CAEpC,OAAQ,CAAA,GACN,KAAK,EAAU,QAAQ,CAAC,cAwBpB,EAAM,EAAM,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,GAEpC,EAAM,WAAW,CAAC,GAxBd,GAAY,EACZ,KACF,MAAK,EAAU,QAAQ,CAAC,cA0B1B,EAAM,IAAI,CAAC,EAAW,EAAE,CAAC,MAAM,GAxB3B,GAAY,EACZ,KACF,MAAK,EAAU,QAAQ,CAAC,iBA0BzB,EAAG,EAAM,IAAI,EAAE,OAAO,CAAC,SAAC,CAAxB,EACC,IAAM,EAAU,EAAI,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,GAEvC,EAAI,YAAY,CAAC,EAAS,EAAI,KAAK,CAAC,EAAI,KAAK,CAAC,MAAM,CAAG,EAAE,CAC3D,GA5BI,GAAY,EACZ,KACF,MAAK,EAAU,QAAQ,CAAC,iBACtB,AA4BN,CAAA,WAGE,IAAK,IAFC,EAAQ,EAAG,EAAM,IAAI,EAElB,EAAI,EAAG,EAAI,EAAK,MAAM,CAAE,IAC/B,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAW,EAAE,CAAC,MAAM,EAE5C,CAAA,IAjCM,GAAY,EACZ,KACF,SAEE,QAAQ,GAAG,CAAC,mCAAoC,EACpD,CA+BA,EAAU,QAAQ,CAAG,GA/DN,GAgEf,EAAU,QAAQ,CAAG,GAjEN,EAkEf,EAAU,QAAQ,CAAG,GAjEN,GAkEf,EAAU,QAAQ,CAAG,GAnEN,CAmCjB,CA7BA,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,EAAI,gBAAgB,CAAC,QAAS,EAChC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar field = document.querySelector(\".field\");\nvar btns = document.querySelectorAll(\".button\");\nvar addRowBtn = document.querySelector(\".append-row\");\nvar delRowBtn = document.querySelector(\".remove-row\");\nvar addColBtn = document.querySelector(\".append-column\");\nvar delColBtn = document.querySelector(\".remove-column\");\nvar MIN_UNIT = 2;\nvar MAX_UNIT = 10;\nvar rowCount = field.rows.length;\nvar colCount = field.rows[0].cells.length;\nbtns.forEach(function(btn) {\n    btn.addEventListener(\"click\", handleBtnClick);\n});\nfunction handleBtnClick(e) {\n    var activeBtn = e.target.className;\n    switch(true){\n        case activeBtn.includes(\"append-row\"):\n            addRow();\n            rowCount += 1;\n            break;\n        case activeBtn.includes(\"remove-row\"):\n            removeRow();\n            rowCount -= 1;\n            break;\n        case activeBtn.includes(\"append-column\"):\n            addCol();\n            colCount += 1;\n            break;\n        case activeBtn.includes(\"remove-column\"):\n            removeCol();\n            colCount -= 1;\n            break;\n        default:\n            // eslint-disable-next-line no-console\n            console.log(\"Smth going wrong with this btn: \", activeBtn);\n    }\n    checkTableSize();\n}\nfunction addRow() {\n    var row = field.rows[0].cloneNode(true);\n    field.appendChild(row);\n}\nfunction removeRow() {\n    field.rows[rowCount - 1].remove();\n}\nfunction addCol() {\n    _to_consumable_array(field.rows).forEach(function(row) {\n        var dupNode = row.cells[0].cloneNode(true);\n        row.insertBefore(dupNode, row.cells[row.cells.length - 1]);\n    });\n}\nfunction removeCol() {\n    var rows = _to_consumable_array(field.rows);\n    for(var i = 0; i < rows.length; i++)field.rows[i].cells[colCount - 1].remove();\n}\nfunction checkTableSize() {\n    addRowBtn.disabled = rowCount >= MAX_UNIT;\n    delRowBtn.disabled = rowCount <= MIN_UNIT;\n    addColBtn.disabled = colCount >= MAX_UNIT;\n    delColBtn.disabled = colCount <= MIN_UNIT;\n}\n\n//# sourceMappingURL=index.afb8400c.js.map\n","'use strict';\n\n'use strict';\n\nconst field = document.querySelector('.field');\nconst btns = document.querySelectorAll('.button');\nconst addRowBtn = document.querySelector('.append-row');\nconst delRowBtn = document.querySelector('.remove-row');\nconst addColBtn = document.querySelector('.append-column');\nconst delColBtn = document.querySelector('.remove-column');\nconst MIN_UNIT = 2;\nconst MAX_UNIT = 10;\n\nlet rowCount = field.rows.length;\nlet colCount = field.rows[0].cells.length;\n\nbtns.forEach((btn) => {\n  btn.addEventListener('click', handleBtnClick);\n});\n\nfunction handleBtnClick(e) {\n  const activeBtn = e.target.className;\n\n  switch (true) {\n    case activeBtn.includes('append-row'):\n      addRow();\n      rowCount += 1;\n      break;\n    case activeBtn.includes('remove-row'):\n      removeRow();\n      rowCount -= 1;\n      break;\n    case activeBtn.includes('append-column'):\n      addCol();\n      colCount += 1;\n      break;\n    case activeBtn.includes('remove-column'):\n      removeCol();\n      colCount -= 1;\n      break;\n    default:\n      // eslint-disable-next-line no-console\n      console.log('Smth going wrong with this btn: ', activeBtn);\n  }\n  checkTableSize();\n}\n\nfunction addRow() {\n  const row = field.rows[0].cloneNode(true);\n\n  field.appendChild(row);\n}\n\nfunction removeRow() {\n  field.rows[rowCount - 1].remove();\n}\n\nfunction addCol() {\n  [...field.rows].forEach((row) => {\n    const dupNode = row.cells[0].cloneNode(true);\n\n    row.insertBefore(dupNode, row.cells[row.cells.length - 1]);\n  });\n}\n\nfunction removeCol() {\n  const rows = [...field.rows];\n\n  for (let i = 0; i < rows.length; i++) {\n    field.rows[i].cells[colCount - 1].remove();\n  }\n}\n\nfunction checkTableSize() {\n  addRowBtn.disabled = rowCount >= MAX_UNIT;\n  delRowBtn.disabled = rowCount <= MIN_UNIT;\n  addColBtn.disabled = colCount >= MAX_UNIT;\n  delColBtn.disabled = colCount <= MIN_UNIT;\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","field","document","querySelector","btns","querySelectorAll","addRowBtn","delRowBtn","addColBtn","delColBtn","rowCount","rows","colCount","cells","handleBtnClick","e","row","activeBtn","target","className","includes","cloneNode","appendChild","remove","forEach","dupNode","insertBefore","removeCol","console","log","disabled","btn","addEventListener"],"version":3,"file":"index.afb8400c.js.map"}